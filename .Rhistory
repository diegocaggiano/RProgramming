View(calor)
calor = subset(my_dataset, Ozone >31 | Temp > 90 | !is.na(Ozone))
View(calor)
calor = subset(my_dataset, Ozone >31 | Temp > 90 | (!is.na(Ozone))
)
View(calor)
calor = subset(my_dataset, Ozone >31 | Temp > 90)
View(calor)
buenos = !is.na(calor[1,])
View(buenos)
buenos = !is.na(calor[,1])
View(buenos)
View(calor)
View(buenos)
View(calor)
calor2 = calor[buenos]
calor2 = calor[buenos,]
View(calor2)
maximo = max(calor2[,1])
maximo
mayo = subset(my_dataset, Month = 5)
View(mayo)
mayo = subset(my_dataset, Month == 5)
View(mayo)
buenos = !is.na(mayo[,1])
View(buenos)
View(mayo)
View(buenos)
mayo2 = mayo[buenos, ]
View(mayo2)
max(mayo2[,1])
max(mayo2[,2])
max(mayo2[,3])
max(mayo2[,Day])
max(mayo2[,"Day"])
library(readr)
hw1_dataNEW <- read_csv("C:/Users/n74197/Desktop/Escritorio/Mis Pagos/Coursera/1.R Programming/hw1_dataNEW.csv")
View(hw1_dataNEW)
View(hw1_dataNEW)
rm(hw1_dataNEW)
hw1_dataNEW
library(readr)
medidas <- read_csv("C:/Users/n74197/Desktop/Escritorio/Mis Pagos/Coursera/1.R Programming/hw1_dataNEW.csv")
View(medidas)
medidas
head(medidas)
head(medidas, 1)
head(medidas, 0)
head(medidas, 2)
nrow(medidas)
tail(medidas,2)
tail(medidas,1)
tail(medidas,-1)
head(medidas,-1)
medidas[47,"Ozone"]
malos = is.na(medidas[,1])
malos
malos = malos[malos==TRUE]
cant_malos = length(malos)
print(cant_malos)
medidas1 = medidas[!malos]
medidas1 = medidas[!malos,]
malos = is.na(medidas[,1])
medidas1 = medidas[!malos,]
View(medidas1)
mean_Ozone = colMeans(medidas1[,1])
mean_Ozone
mes6 = subset(medidas, Month==6)
View(mes6)
temperatura = colMeans(mes6[,"Temp"])
temperatura
mayo = subset(medidas, Month==5)
max(mayo[,"Ozone"])
buenos = !is.na(medidas[,"Ozone"])
mayo2 = mayo[buenos]
mayo2 = mayo[buenos,]
View(mayo2)
View(mayo2)
View(mayo)
mes_mayo = subset(medidas, Month==5)
View(mes_mayo)
buenos = !is.na(mes_mayo[,1])
mes_def = mes_mayo[buenos]
mes_def = mes_mayo[buenos,]
View(mes_def)
max_ozone = max(mes_def[,1])
max_ozone
install.packages(swirl)
install.packages("swirl")
library(swirl)
install.packages("swirl")
install.packages("swirl")
library("swirl")
install.packages("stringi")
package_version("swirl")
packageVersion("swirl")
library("swirl")
install_from_swirl("R Programming")
remove.packages("swirl")
install.packages("swirl")
library("swirl")
install.packages("stringi")
library("swirl")
ls()
rm(list=ls())
ls()
swirl()
bye()
quit()
library("swirl")
swirl()
5+7
x<-5+7
x
y<- x-3
y
c(1.1, 9, 3.14)
z<- c(1.1, 9, 3.14)
c
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt<- sqrt(z-1)
my_sqrt
my_div<- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
swirl()
getwd()
ls()
x<- 9
ls()
list.files()
?list.files
args(list.files())
args(list.files)
old.dis <- getwd()
old.dir <- getwd()
dir.create("testdir")
setwd(".\testdir")
getwd()
setdir("C:/Users/n74197/Documents/testdir")
setwd("C:/Users/n74197/Documents/testdir")
setwd("testdir")
setwd("C:/Users/n74197/Documents/testdir")
setwd("C:\Users\n74197\Documents\testdir")
getwd
getwd()
setwd("testdir")
setwd("C:/Users/n74197/Documents")
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
?file.path
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"))
dir.create(file.path("testdir2", "testdir3"), recursive=TRUE)
setwd(old.dir)
swirl()
1:20
pi:10
15:1
?":"
seq(1,20)
seq(0,10, by=0.5)
my_seq<-seq(5,10, length=30)
lenght(my_seq)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
0
5+7
x<- 5+7
x
y<- x-3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2 + 100
my_sqrt<- sqrt(z-1)
my_sqrt
my_div<- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+ c(0,10,100)
z*2 + 1000
my_div
num_vect<-c(0.5, 55, -10, 6)
tf<- num_vect < 1
tf
tf2= num_vect>=6
tf2<- num_vect>=6
num_vect>=6
my_char=c("My", "name", "is")
my_char<-c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name<-c(my_char, "Diego")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep="")
Try paste(LETTERS, 1:4, sep = "-")
paste(LETTERS, 1:4, sep = "-")
1:20
pi:10
15:1
?':'
seq(1:20)
seq(1,20)
seq(0,10,by=0.5)
my_seq=seq(5,10, length=30)
my_seq<-seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(01,1,2), each=10)
rep(c(0,1,2), each=10)
getwd()
ls()
x<- 9
ls()
dir()
?list.files
args(list.files)
old.dir<- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"), recursive=TRUE)
setwd(old.dir)
x<- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect<- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2<-c(11, 2, NA)
names(vect2)<- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector<-c(1:20)
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20, nrow=4, ncol=5)
identilca(my_matrix, my_matrix2)
identical(my_matrix, my_matrix2)
patients<-c("Bill", "Gina", "Kelly", "Sean")
cbind(patiens, my_matrix)
cbind(patients, my_matrix)
my_data<-data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patient", "age", "weigth", "bp", "rating", "test")
cnames<-c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)<-cnames
my_data
0
bye()
swirl()
bye()
bye()
bye
quit()
x<-matrix(1:6, 2, 3)
x
for (i in 1:2){}
for (i in 1:2) {for (j in 1:3) print(x[i,j])}
suma<-(x,y){
x+y
}
suma<-(x,y){
x+y
}
suma<-(x, y){
x+y
}
suma<-(x, y){
x+y
}
suma<-function(x, y){
x+y
}
suma(8,9)
suma(1,3)
suma(1,3)
suma<-function(x, y){
x+2*y
}
suma(1,3)
my_data<-rnorm(100)
my_data
search()
x<-Sys.time()
x
swirl()
library("swirl")
swirl()
0
0
bye
bye()
quit()
library("swirl")
swirl()
TRUE==TRUE
(FALSE==TRUE)==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints<-sample(10)
ints
ints > 5
which(ints[ints>7])
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x) {x[1]}, c(8,4,0))
evaluate(function(x) {x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
submit()
telegra("my", "name", "is", "Diego")
telegram("my", "name", "is", "Diego")
submit()
mad_libs(place="Montevideo", adjective="engorroso", noun="guepardo")
submit()
"I" %p% "love" %p% "R!"
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
t4<- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
quit()
x = c(10,20,30,40,50)
y = c(1,3,4)
x
y
for j in y {print(x[j])}
for j in c(1,3,4) {c[j]}
for j 1:length(y) {print x[y[j]]}
for j (1:length(y)) {print x[y[j]]}
?for (variable in vector) {
}
for j in (1:length(y)) {print x[y[j]]}
for (j in 1:length(y)) {print x[y[j]]}
for (i in 1:5) print(1:i)
x <- c(10,20,30,40,50)
y <- c(1,3,4)
for (j in 1: length(y)) print(j)
for (j in 1: length(y)) print(y[j])
for (j in 1: length(y)) print(x[y[j]])
setwd("C:/Data_Science/RProgramming")
dir()
source('C:/Data_Science/RProgramming/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
source('C:/Data_Science/RProgramming/complete.R')
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc
print(cc$obs)
source('C:/Data_Science/RProgramming/complete.R')
source('C:/Data_Science/RProgramming/complete.R')
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
source('C:/Data_Science/RProgramming/corr.R')
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
x<-list(a=1:5, b=rnorm(10))
x
lapply(x, mean)
quit()
